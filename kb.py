from aiogram import types
from utils import get_all_modes


async def menu_keyboard(cur_lang):
    modes = await get_all_modes()
    if cur_lang == 'ru':
        main_menu = types.InlineKeyboardMarkup(row_width=5)
        main_menu.add(
            types.InlineKeyboardButton('–ú–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
                                       callback_data='user_profile'))
        main_menu.add(
            types.InlineKeyboardButton('–ü–æ–º–æ—â—å', callback_data='help'))
        main_menu.add(
            types.InlineKeyboardButton('–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è',
                                       callback_data='tutorial'))
        for mode in modes:
            if mode["name"] != 'phonetics2':
                main_menu.add(
                    types.InlineKeyboardButton(
                        f'–ü–µ—Ä–µ–π—Ç–∏ –≤ —Ä–µ–∂–∏–º "{mode["verbose_name_ru"]}"',
                        callback_data=f'change_mode_{mode["name"]}'))
        main_menu.add(
            types.InlineKeyboardButton('–°–º–µ–Ω–∏—Ç—å –≥–æ–ª–æ—Å', callback_data='voice'))
        main_menu.add(
            types.InlineKeyboardButton('–ü–æ–º–µ–Ω—è—Ç—å —è–∑—ã–∫ –Ω–∞ –†—É—Å—Å–∫–∏–π',
                                       callback_data='ru_lang'))
        main_menu.add(
            types.InlineKeyboardButton('–ü–æ–º–µ–Ω—è—Ç—å —è–∑—ã–∫ –Ω–∞ –ê–Ω–≥–ª–∏–π—Å–∫–∏–π',
                                       callback_data='en_lang'))
        return main_menu
    elif cur_lang == 'en':
        main_menu = types.InlineKeyboardMarkup(row_width=5)
        main_menu.add(
            types.InlineKeyboardButton('User menu',
                                       callback_data='user_profile'))
        main_menu.add(types.InlineKeyboardButton('Help', callback_data='help'))
        main_menu.add(
            types.InlineKeyboardButton('Tutorial', callback_data='tutorial'))
        for mode in modes:
            if mode["name"] != 'phonetics2':
                main_menu.add(
                    types.InlineKeyboardButton(
                        f'Switch to "{mode["verbose_name_en"]}" mode',
                        callback_data=f'change_mode_{mode["name"]}'))
        main_menu.add(
            types.InlineKeyboardButton('Change voice', callback_data='voice'))
        main_menu.add(
            types.InlineKeyboardButton('Change language to RU',
                                       callback_data='ru_lang'))
        main_menu.add(
            types.InlineKeyboardButton('Change language to EN',
                                       callback_data='en_lang'))
        return main_menu

#url=f'https://t.me/share/url?text=–ë—É–¥—É—â–µ–µ —É–∂–µ –∑–¥–µ—Å—å ü§ô –¢—Ä–µ–Ω–∏—Ä—É–π —Å–≤–æ–π –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —Å–æ Skillbuddy! –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ: https://t.me/SkillbuddyBot?start={user_id}'

def profile_kb_if_subed(cur_lang, user_id):
    kb = types.InlineKeyboardMarkup()
    if cur_lang == 'ru':
        kb.add(
            types.InlineKeyboardButton(
                '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ—Ñ. —Å—Å—ã–ª–∫–æ–π',
                callback_data='share_ref_link'
            ))
    elif cur_lang == "en":
        kb.add(
            types.InlineKeyboardButton(
                'Share referal link',
                callback_data='share_ref_link'
            ))
    return kb


def profile_kb_if_unsubed(cur_lang):
    kb = types.InlineKeyboardMarkup()
    if cur_lang == 'ru':
        kb.add(
            types.InlineKeyboardButton('–ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', callback_data="subscribe"))
    elif cur_lang == "en":
        kb.add(types.InlineKeyboardButton('Subscribe', callback_data="subscribe"))
    return kb
